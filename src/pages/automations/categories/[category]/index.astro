---
// src/pages/automations/categories/[category].astro
import Layout from "../../../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const { category } = Astro.params;

// Get all automations and filter by category
const allAutomations = await getCollection("automations");
const filteredAutomations = allAutomations.filter(
  (automation) => automation.data.category === category
);

// Format category name for display (convert hyphens to spaces and capitalize)
const formatCategoryName = (cat: string) => {
  return cat
    .split('-')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

const displayCategory = formatCategoryName(category || '');
---

<Layout title={`${displayCategory} - Automations`} description={`Browse ${displayCategory} automation workflows`}>
  <div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-dark mb-2">{displayCategory} Automations</h1>
        <p class="text-gray-600">Browse our collection of {displayCategory.toLowerCase()} automation workflows</p>
      </div>

      <!-- Results count -->
      <div class="mb-6">
        <p class="text-gray-600">
          Showing {filteredAutomations.length} automation{filteredAutomations.length !== 1 ? 's' : ''}
        </p>
      </div>

      <!-- Automations List -->
      {filteredAutomations.length > 0 ? (
        <div class="bg-base-100 rounded-box shadow-sm">
          <ul class="menu menu-lg w-full p-2">
            {filteredAutomations.map((automation) => (
              <li class="">
                <a href={`/automations/${automation.slug}`} class="hover:bg-base-200 rounded-lg">
                  <div class="flex flex-col items-start w-full">
                    <div class="flex justify-between items-center w-full mb-2">
                      <h2 class="text-xl font-semibold text-dark">{automation.data.name}</h2>
                      {automation.data.featured && (
                        <span class="badge badge-warning badge-sm">Featured</span>
                      )}
                    </div>
                    
                    <p class="text-gray-600 text-sm mb-3 line-clamp-2">
                      {automation.data.name}
                    </p>
                    
                    <div class="flex flex-wrap gap-2">
                      <span class="badge badge-primary badge-sm">{automation.data.category}</span>
                      {automation.data.types.map((type) => (
                        <span class="badge badge-secondary badge-sm">{type}</span>
                      ))}
                    </div>
                    
                    <div class="mt-3 flex items-center text-xs text-gray-500">
                      <span class="mr-4">
                        <i class="fas fa-play-circle mr-1"></i>
                        {automation.data.triggerNode}
                      </span>
                      <span>
                        <i class="fas fa-puzzle-piece mr-1"></i>
                        {automation.data.nodes.length} nodes
                      </span>
                    </div>
                  </div>
                </a>
              </li>
            ))}
          </ul>
        </div>
      ) : (
        <!-- Empty state -->
        <div class="text-center py-12">
          <div class="text-6xl mb-4">ðŸ¤–</div>
          <h2 class="text-2xl font-semibold text-gray-700 mb-2">No automations found</h2>
          <p class="text-gray-600 mb-6">We couldn't find any automations in the {displayCategory.toLowerCase()} category.</p>
          <a href="/automations" class="btn btn-primary">
            <i class="fas fa-arrow-left mr-2"></i>
            Back to all automations
          </a>
        </div>
      )}

      <!-- Back to all automations -->
      {filteredAutomations.length > 0 && (
        <div class="text-center mt-8">
          <a href="/automations" class="btn btn-ghost">
            <i class="fas fa-arrow-left mr-2"></i>
            View all automations
          </a>
        </div>
      )}
    </div>
  </div>

  <style>
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</Layout>
